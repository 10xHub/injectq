[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "injectq"
dynamic = ["version"]
description = "Modern Python dependency injection library combining simplicity, power, and performance"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    { name = "InjectQ Contributors" },
]
keywords = [
    "dependency-injection",
    "di",
    "ioc",
    "inversion-of-control",
    "container",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]
dependencies = [
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
fastapi = ["fastapi>=0.68.0"]
taskiq = ["taskiq>=0.9.0"]
fastmcp = ["fastmcp>=0.1.0"]
testing = ["pytest>=6.0.0", "pytest-asyncio>=0.21.0"]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=3.0.0",
    "mypy>=1.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "isort>=5.0.0",
]

[project.urls]
Homepage = "https://github.com/Iamsdt/injectq"
Documentation = "https://github.com/Iamsdt/injectq"
Repository = "https://github.com/Iamsdt/injectq"
Issues = "https://github.com/Iamsdt/injectq/issues"

[tool.hatch.version]
path = "injectq/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["injectq"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=injectq",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["injectq"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]